(new WOW).init();var navMain=document.querySelector(".main-nav"),navToggle=document.querySelector(".main-nav__toggle");navToggle.addEventListener("click",function(){navMain.classList.contains("main-nav--closed")?(navMain.classList.remove("main-nav--closed"),navMain.classList.add("main-nav--opened"),navToggle.classList.add("main-nav__toggle--open")):(navMain.classList.add("main-nav--closed"),navMain.classList.remove("main-nav--opened"),navToggle.classList.remove("main-nav__toggle--open"))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
